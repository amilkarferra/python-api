# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - fast-api-dev

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        # Log para confirmar que se ha revisado el código correctamente
        run: echo "Código revisado y listo para la configuración."

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
        # Log para confirmar la instalación de la versión de Python
        run: echo "Versión de Python configurada: $(python --version)"

      - name: Install dependencies
        run: |
          echo "Instalando dependencias del proyecto..."
          pip install -r requirements.txt
          echo "Dependencias instaladas correctamente."

      # Optional: Run unit tests here
      # - name: Run Unit Tests
      #   run: pytest

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            app.py
            requirements.txt
            !.git/
            !__pycache__/
            !*.md
            !tests/
        # Log para confirmar la subida de artefactos
        run: echo "Artefactos preparados y subidos para el despliegue."

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # Esto es requerido para autenticación con Azure (OIDC o JWT)

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
        # Log para verificar que se han descargado los artefactos correctamente
        run: echo "Artefactos descargados del trabajo de construcción."

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_8707AE064F584C11811D43EE26810EEB }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_647F9101FBA64F729BC742F2ADD0D8C7 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_7367058CB5854D7E83364208FEA97EC1 }}
        # Log para confirmar que se ha iniciado sesión en Azure
        run: echo "Inicio de sesión en Azure completado."

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'fast-api-dev'
          slot-name: 'Production'
          package: '.'
        # Log para verificar que el despliegue se inició
        run: echo "Despliegue a Azure Web App iniciado..."

      - name: Configure Startup Command
        run: |
          echo "Configurando el comando de inicio de la aplicación..."
          az webapp config set --name fast-api-dev --resource-group rg-sl001-dev --startup-file "gunicorn -w 4 -k uvicorn.workers.UvicornWorker app:app"
          echo "Comando de inicio configurado correctamente."
